// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DomainLayer.Models;

public partial class StockRealTimeContext : DbContext
{

    public StockRealTimeContext(DbContextOptions<StockRealTimeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrdersHistory> OrdersHistories { get; set; }

    public virtual DbSet<Stock> Stocks { get; set; }

    public virtual DbSet<StockHistory> StockHistories { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Order>(entity =>
        {
            entity.ToTable("Order");

            entity.Property(e => e.OrderType)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.StockSymbol)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<OrdersHistory>(entity =>
        {
            entity.ToTable("OrdersHistory");

            entity.Property(e => e.OrderType)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.StockSymbol)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.FkOrder).WithMany(p => p.OrdersHistories)
                .HasForeignKey(d => d.FkOrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrdersHistory_Order");
        });

        modelBuilder.Entity<Stock>(entity =>
        {
            entity.ToTable("Stock");

            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.CurrentPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Symbol)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.TimeStamps).HasColumnType("datetime");
        });

        modelBuilder.Entity<StockHistory>(entity =>
        {
            entity.ToTable("StockHistory");

            entity.Property(e => e.CurrentPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Symbol)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.TimeStamps).HasColumnType("datetime");

            entity.HasOne(d => d.FkStock).WithMany(p => p.StockHistories)
                .HasForeignKey(d => d.FkStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_StockHistory_Stock");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}